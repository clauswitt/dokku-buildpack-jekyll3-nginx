#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

# config
NGINX_VERSION="1.6.0"
S3_BUCKET="essh-heroku-buildpack-nginx"

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# s3 packages
# NGINX_PACKAGE="http://${S3_BUCKET}.s3.amazonaws.com/nginx-${NGINX_VERSION}.tgz"
NGINX_PACKAGE="https://s3.amazonaws.com/devmynd-github/heroku-nginx-1.6.0.tar.gz"

# vendor directories
VENDORED_NGINX=$(mktemp -d -t nginx.XXXXXX)

mkdir -p $BUILD_DIR $CACHE_DIR

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

if [[ `ruby -v` == "ruby 1"* ]]; then
  echo "-----> Installing Ruby 2.2.1"
  git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
  git clone https://github.com/garnieretienne/rvm-download.git ~/.rbenv/plugins/rvm-download
  export PATH="$HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH"
  rbenv download 2.2.1
  rbenv rehash
  rbenv local 2.2.1
fi

echo "-----> Using `ruby -v`"

# download and upack packages
echo "-----> Fetching nginx binaries"
curl $NGINX_PACKAGE -s -o - | tar xzf - -C $VENDORED_NGINX

# vendor nginx into the slug
echo "-----> Vendoring nginx $NGINX_VERSION"
mkdir -p "$BUILD_DIR/bin"
cp "$VENDORED_NGINX/nginx/sbin/nginx" "$BUILD_DIR/bin/nginx"

# build nginx config unless overridden by user
if [ ! -f $BUILD_DIR/conf/nginx.conf ]; then
  echo "-----> Using default nginx.conf.erb"
  mkdir -p $BUILD_DIR/conf
  cp $LP_DIR/conf/nginx.conf.erb $BUILD_DIR/conf/nginx.conf.erb
fi

# build mime.types unless overridden by user
if [ ! -f $BUILD_DIR/conf/mime.types ]; then
  echo "-----> Using default mime.types"
  mkdir -p $BUILD_DIR/conf
  cp $LP_DIR/conf/mime.types $BUILD_DIR/conf/mime.types
fi

# Set charset to avoid https://github.com/jekyll/jekyll/issues/4268
echo "-----> Setting UTF-8 environment"
export LC_ALL=C.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

gem update --system --no-document --quiet
gem install bundler --no-rdoc --no-ri | indent
cd $BUILD_DIR
bundle install
bundle exec jekyll build

# build a startup script
cat <<EOF >"$BUILD_DIR/bin/start_nginx"
#!/usr/bin/env bash
erb conf/nginx.conf.erb > conf/nginx.conf
mkdir -p logs
touch logs/access.log logs/error.log
(tail -qF -n 0 --pid=\$\$ logs/*.log &)
exec bin/nginx -p .
EOF
chmod +x "$BUILD_DIR/bin/start_nginx"
